*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  block-size: 100%;
}

.page {
  inline-size: 1200px;
  block-size: 100%;
  margin: auto;
  color: #fff;
  font-family: 'Fira Sans Condensed', sans-serif;
  font-size: 18px;
  background-color: #1b1919;
  display: flex;
  flex-direction: column;
}

h1,
h2,
h3,
h4,
p,
ul,
ol,
li,
blockquote,
fieldset {
  margin: 0;
  padding: 0;
}

ul,
ol {
  list-style: none;
}

.visually-hidden {
  position: absolute;
  inline-size: 1px;
  block-size: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  white-space: nowrap;
} 

.content {
  display: flex;
  margin: auto;
  align-items: flex-end;
  max-width: 1140px;
  height: auto;
  /* Отличие от макета: высота гибкая, надеюсь можно так оставлять ширину контента, раньше было auto и оно съезжало + скролл*/
}

/*----------section result--------------*/
.result {
  margin: 78px 30px 0px 5px; /*Добавила тут еще отступ слева в 5px, возможно вы цетруете макет иначе и тут был сдвиг*/
}

.result__video-container {
  position: relative;
  width: 711px;
  height: 386px;
  display: flex;
  margin: 0px 0px 16px;
}

.result__video {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.search-form {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
}

.search-form__fieldset-title {
  font-size: 18px;
  font-weight: 400;
  margin: 0px 0px 5px;
}

fieldset {
  border: none;
}

.search-form__label {
  cursor: pointer;
  width: fit-content;
  display: flex; 
  align-items: center; 
}

.search-form__label:hover .search-form__label-text{
  /*для checkbox*/
  text-decoration: underline;
}

.search-form__label:has(:focus-visible) {
  /*для input text + checkbox*/
  outline: 1px #fff solid;
}

.search-form__label:focus {
  /*для input text + checkbox*/
  outline: none;
}

.search-form__textfield {
  appearance: none;
  font-family: 'Fira Sans Condensed', sans-serif;
  font-size: 18px;
  background-color: transparent;
  color: #fff;
  font-weight: 400;
  border: 1px currentColor;
  border-style: solid none ;
  height: 27px;
  width: 225px;
}

.search-form__textfield:active {
  outline: 1px #fff solid;
}

.search-form__textfield:focus {
  outline: none;
}

.search-form__checkbox-list {
  display: flex;
  justify-content: space-between;
  width: 212px;
}

.search-form__pseudo-checkbox {
  position: relative;
  display: inline-block;
  margin-right: 1.5px;
  vertical-align: middle;
  height: 19px;
  width: 19px;
  background-color: transparent;
  border: 1px #fff solid;
}

input[type='checkbox']:checked + span {
  background-color:#000000;
}

.search-form__checkbox:checked + .search-form__pseudo-checkbox::before,
.search-form__checkbox:active + .search-form__pseudo-checkbox::before {
  content: '';
  display: block;
  width: 80%;
  height: 80%;
  background-color: rgb(255, 255, 255);
  margin: 10%;
}

.search-form__label-text {
  margin: 0px 0px 0px 5px;
}

/*----------section content__details--------------*/

.content__details {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.title {
  margin: 0px 139px 0px 0px;
  padding: 3px 0px 0px;
  font-family: 'Oswald', sans-serif;
  font-size: 75px;
  line-height: 94%;
  text-transform: uppercase;
}

.content__accent {
  color: #545050;
}

.content__list {
  position: relative;
  height: 302px;
  display: flex;
  flex-direction: column;
  overflow: auto;
  padding: 3px;
}

.content__list-item:not(:last-child) {
  margin: 0px 0px 30px;
}

.content__card-link {
  display: block;
  text-decoration: none;
  color: #fff;
}

.content__card-link:active,
.content__card-link_current {
  background-color: #545050;
}

.content__card-link:hover {
  text-decoration: underline;
}
/* "Лейбл должен получать границу только когда у поля находится в состоянии focus-visible, но не focus. 
Чтобы такое реализовать, можно применить хитрую комбинацию псевдоклассов — :has(:focus-visible)." - написано в 
проектной работе, по логике прописывала так и тут, но внизу код, который написали Вы
.content__card-link:has(:focus-visible) {
  outline: 1px #fff solid;
} */

.content__card-link:focus {
  outline: none;
}

.content__card-link:focus-visible {
  outline: 1px solid #fff;
}

.content__video-card {
  display: flex;
  align-content: flex-start;
  height: 107px;
}

.content__video-card-description-container {
  width: 100%;
  height: 100%;
}

.content__video-card-description {
  line-height: 16.2px;
}

.content__video-card-thumbnail {
  min-width: 194px;
  height: 103px;
  object-fit: cover;
  align-self: center
}

.content__video-card-title {
  font-family: 'Oswald', sans-serif;
  font-size: 30px;
  text-transform: uppercase;
  text-overflow: ellipsis; 
  white-space: nowrap; 
  overflow: hidden;
  max-width: 200px;
}

/*---------кнопки---------*/

.button {
  cursor: pointer;
  background-color: transparent;
  border: 1px currentColor solid;
  color: #fff;
  font-family: 'Fira Sans Condensed', sans-serif;
  font-size: 18px;
  font-weight: bold;
}

.button:active {
  background-color:#545050;
}

.button:hover {
  text-decoration: underline;
}

/* .button:has(:focus-visible) { Аналогично спутала текст перед проектной работой)
  outline: 1px #fff solid;
} */

.button:focus {
  outline: none;
}

.button:focus-visible {
  outline: 1px solid #fff;
}

.search-form__submit-button {
  align-self: flex-end;
  padding: 6px 72.5px;
}

.more-button {
  padding: 6px 142px;
}
